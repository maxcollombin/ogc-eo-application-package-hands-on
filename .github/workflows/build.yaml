name: build
on:
  push:
    branches:
      - master
      - main
jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - run: pip install cwltool
      - run: cwltool --validate water-bodies/app-package.cwl

  version:
    needs: validate

    runs-on: ubuntu-latest

    outputs:

      app-version: ${{ steps.set-version.outputs.version }}

    steps:
      - uses: actions/checkout@v2
      - run: wget https://github.com/mikefarah/yq/releases/download/${VERSION}/${BINARY} -O /usr/bin/yq 
        env:
          VERSION: v4.2.0
          BINARY: yq_linux_amd64
      - run: chmod +x /usr/bin/yq
      - run: echo "APP_VERSION=$( yq e '."s:softwareVersion"' water-bodies/app-package.cwl | tr -d "\n" )" >> $GITHUB_ENV
      - run: echo app version is $APP_VERSION
      - id: set-version
        run: echo "::set-output name=version::$APP_VERSION"

  container-crop:
   
    needs: version
    
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - run: echo version ${{needs.version.outputs.app-version}}
      - run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
      - name: build & push crop image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/crop
          docker build src --file water-bodies/command-line-tools/crop/Dockerfile --tag crop
          docker tag crop $IMAGE_ID:${{needs.version.outputs.app-version}}
          docker push $IMAGE_ID:${{needs.version.outputs.app-version}}

  container-normalized-difference:
   
    needs: version
    
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - run: echo version ${{needs.version.outputs.app-version}}
      - run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
      - name: build & push norm_diff image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/norm_diff
          docker build src --file water-bodies/command-line-tools/norm_diff/Dockerfile --tag norm_diff
          docker tag norm_diff $IMAGE_ID:${{needs.version.outputs.app-version}}
          docker push $IMAGE_ID:${{needs.version.outputs.app-version}}
  
  container-otsu:
   
    needs: version
    
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - run: echo version ${{needs.version.outputs.app-version}}
      - run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
      - name: build & push otsu image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/otsu
          docker build src --file water-bodies/command-line-tools/otsu/Dockerfile --tag otsu
          docker tag otsu $IMAGE_ID:${{needs.version.outputs.app-version}}
          docker push $IMAGE_ID:${{needs.version.outputs.app-version}}

  container-stac:
   
    needs: version
    
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - run: echo version ${{needs.version.outputs.app-version}}
      - run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
      - name: build & push stac image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/stac
          docker build src --file water-bodies/command-line-tools/stac/Dockerfile --tag stac
          docker tag stac $IMAGE_ID:${{needs.version.outputs.app-version}}
          docker push $IMAGE_ID:${{needs.version.outputs.app-version}}


  publish:

    needs: 
      - container-crop
      - container-normalized-difference
      - container-otsu
      - container-stac
      - version

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - run: yq -i eval '(.$graph[] | select (.id == "crop") ).requirements.DockerRequirement.dockerPull = "docker.pkg.github.com/Terradue/ogc-eo-application-package-hands-on/crop:${{needs.version.outputs.app-version}}"' water-bodies/app-package.cwl 
      - run: yq -i eval '(.$graph[] | select (.id == "norm_diff") ).requirements.DockerRequirement.dockerPull = "docker.pkg.github.com/Terradue/ogc-eo-application-package-hands-on/norm_fiff:${{needs.version.outputs.app-version}}"' water-bodies/app-package.cwl 
      - run: yq -i eval '(.$graph[] | select (.id == "otsu") ).requirements.DockerRequirement.dockerPull = "docker.pkg.github.com/Terradue/ogc-eo-application-package-hands-on/otsu:${{needs.version.outputs.app-version}}"' water-bodies/app-package.cwl 
      - run: yq -i eval '(.$graph[] | select (.id == "stac") ).requirements.DockerRequirement.dockerPull = "docker.pkg.github.com/Terradue/ogc-eo-application-package-hands-on/stac:${{needs.version.outputs.app-version}}"' water-bodies/app-package.cwl    
      - run: mkdir downloads
      - run: cp water-bodies/app-package.cwl downloads/app-water-bodies.${{needs.version.outputs.app-version}}.cwl
      - run: ls downloads/app-water-bodies.${{needs.version.outputs.app-version}}.cwl
      - uses: actions/upload-artifact@v2
        with: 
          name: application-package
          path: downloads
      - name: release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{needs.version.outputs.app-version}}
          tag_name: ${{needs.version.outputs.app-version}}
          #body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: upload linux artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: downloads/app-water-bodies.${{needs.version.outputs.app-version}}.cwl
          asset_name: app-water-bodies.${{needs.version.outputs.app-version}}.cwl
          asset_content_type: text/yaml